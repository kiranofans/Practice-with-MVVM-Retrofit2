apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def debugKeystorePropertiesFile = rootProject.file("./keystore/debugkeystore.properties")
def debugKeystoreProperties = new Properties()
debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))

def keystorePropertiesFile = rootProject.file("./keystore/release_keystore.properties")
def keystoreProperties=new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def apiKeyPropertiesFile = rootProject.file("./api_keys_secrets/news_api_key.properties")
def apiKeyProperties=new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.android_projects.newsapipractice"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //part of loading the api key or secrets
        buildConfigField("String","NEWS_API_KEY",apiKeyProperties['NEWS_API_KEY'])
        buildConfigField("String","GOOGLE_SERVER_CLIENT_ID_DEBUG",apiKeyProperties['GOOGLE_SERVER_CLIENT_ID_DEBUG'])
        buildConfigField("String","GOOGLE_SERVER_CLIENT_ID_RELEASE",apiKeyProperties['GOOGLE_SERVER_CLIENT_ID_RELEASE'])
        buildConfigField("String","GOOGLE_CLIENT_SECRET",apiKeyProperties['GOOGLE_CLIENT_SECRET'])
    }

    signingConfigs {
        debugSigningConfigs {
            storeFile file(debugKeystoreProperties['storeFile'])
            storePassword debugKeystoreProperties['storePassword']
            keyAlias debugKeystoreProperties['keyAlias']
            keyPassword debugKeystoreProperties['keyPassword']
        }
        releaseSigningConfigs{
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigningConfigs
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debugSigningConfigs
        }

    }
     dataBinding.enabled = true
     compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    //Use def dependency_version inside double quote

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-plus:17.0.0'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "com.google.android.material:material:1.2.1"

    //Retrofit 2
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    // For control over item selection of both touch and mouse driven selection
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc02'

    //AndroidX coordinator layout
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"

    //Lifecycle (don't need to apply compiler if using java 8)
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //CardView
    implementation "androidx.cardview:cardview:1.0.0"

    //Glide
    def glide_version = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //Facebook APIs
    def fb_api_version = "7.0.0"
    implementation "com.facebook.android:facebook-share:$fb_api_version"

    //Google APIs
    implementation "com.google.android.gms:play-services-auth:18.1.0"
    implementation "com.google.android.gms:play-services-plus:17.0.0"
    //Firebase SDK for Google Analytics
    implementation "com.google.firebase:firebase-analytics:17.5.0"

    //Joda-Time
    implementation "joda-time:joda-time:2.10.6"
}
